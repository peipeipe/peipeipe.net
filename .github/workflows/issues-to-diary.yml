name: Issues to Diary

on:
  issues:
    types: [opened]

jobs:
  create-diary:
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'diary') || github.event.issue.title == '日記投稿'
    permissions:
      contents: write
      issues: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyyaml pytz requests pillow
    
    - name: Create diary entry from issue
      run: |
        python scripts/issue_to_diary.py
      env:
        ISSUE_TITLE: ${{ github.event.issue.title }}
        ISSUE_BODY: ${{ github.event.issue.body }}
        ISSUE_NUMBER: ${{ github.event.issue.number }}
        ISSUE_URL: ${{ github.event.issue.html_url }}
        ISSUE_USER: ${{ github.event.issue.user.login }}
    
    - name: Label and close issue
      run: |
        # まず処理完了ラベルを追加
        curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/labels \
          -d '["diary-processed"]'
        
        # その後クローズ
        curl -X PATCH \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }} \
          -d '{"state":"closed","state_reason":"completed"}'
    
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action (Diary)"
        git add _diary/ images/
        if git diff --staged --quiet; then
          echo "変更がありません"
        else
          git commit -m "📝 日記投稿: ${{ github.event.issue.user.login }} - $(date '+%Y-%m-%d %H:%M')"
          git push
        fi
